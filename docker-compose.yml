version: '3.8'

services:
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: todo-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    networks:
      - todo-network
    depends_on:
      - mysql
      - redis

  nginx:
    image: nginx:alpine
    container_name: todo-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - todo-network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: todo-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: todo_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: secret
      MYSQL_USER: todo_user
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - todo-network

  redis:
    image: redis:alpine
    container_name: todo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - todo-network

  mailhog:
    image: mailhog/mailhog
    container_name: todo-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - todo-network

  queue:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: todo-queue
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work --tries=3 --timeout=90
    volumes:
      - ./backend:/var/www
    networks:
      - todo-network
    depends_on:
      - mysql
      - redis

  frontend:
    image: node:20-alpine
    container_name: todo-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev -- --host"
    networks:
      - todo-network

networks:
  todo-network:
    driver: bridge

volumes:
  mysql_data:
